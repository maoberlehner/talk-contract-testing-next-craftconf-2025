/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/shopping-list/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all shopping list items */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of items */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ShoppingListItemResponse"][];
                    };
                };
            };
        };
        put?: never;
        /** Create a new shopping list item */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ShoppingListItemRequest"];
                };
            };
            responses: {
                /** @description Item created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ShoppingListItemResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shopping-list/items/{itemId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update an item */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    itemId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ShoppingListItemRequest"];
                };
            };
            responses: {
                /** @description Updated item */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ShoppingListItemResponse"];
                    };
                };
            };
        };
        post?: never;
        /** Delete an item */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    itemId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Item deleted */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @default true */
                            deleted: boolean;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ShoppingListItemRequest: {
            /**
             * Format: uuid
             * @example 550e8400-e29b-41d4-a716-446655440000
             */
            id?: string;
            /**
             * Format: uuid
             * @example 550e8400-e29b-41d4-a716-446655440000
             */
            productId?: string;
            /** @example Milk */
            name: string;
            /** @example 2 */
            quantity?: number;
            /**
             * @default false
             * @example false
             */
            completed: boolean;
        };
        ShoppingListItemResponse: components["schemas"]["ShoppingListItemRequest"] & {
            /**
             * Format: uuid
             * @example 550e8400-e29b-41d4-a716-446655440000
             */
            id: string;
            /**
             * Format: uuid
             * @example 550e8400-e29b-41d4-a716-446655440000
             */
            productId: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
